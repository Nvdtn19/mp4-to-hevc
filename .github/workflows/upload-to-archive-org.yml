name: Upload to Archive.org

on:
  workflow_dispatch:
    inputs:
      file_urls:
        description: 'File URLs (space-separated)'
        required: true
      page_title:
        description: 'Page Title'
        required: true
      page_url:
        description: 'Page URL (optional, leave blank for default)'
        required: false
      description:
        description: 'Description'
        required: true
      subject_tags:
        description: 'Subject Tags (comma-separated)'
        required: true
      creator:
        description: 'Creator'
        required: false
      publish_date:
        description: 'Date (YYYY-MM-DD)'
        required: false
      collection:
        description: 'Collection'
        required: true
        type: choice
        options:
        - opensource_media
        - community
        - opensource_audio
        - opensource_movies
        - opensource_software
        - opensource_image
        - etree
        - publicdomain
      test_item:
        description: 'Is this a Test Item?'
        required: true
        type: choice
        options:
        - 'No'
        - 'Yes (will be removed after 30 days)'
      license:
        description: 'License'
        required: true
        type: choice
        options:
        - 'http://creativecommons.org/licenses/by/4.0/' # CC BY
        - 'http://creativecommons.org/licenses/by-sa/4.0/' # CC BY-SA
        - 'http://creativecommons.org/licenses/by-nc/4.0/' # CC BY-NC
        - 'http://creativecommons.org/licenses/by-nc-sa/4.0/' # CC BY-NC-SA
        - 'http://creativecommons.org/publicdomain/zero/1.0/' # CC0
        - 'http://creativecommons.org/publicdomain/mark/1.0/' # Public Domain

jobs:
  upload_to_archiveorg:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install internetarchive
      run: pip install internetarchive

    - name: Configure internetarchive tool
      env:
        IA_ACCESS_KEY: ${{ secrets.IA_ACCESS_KEY }}
        IA_SECRET_KEY: ${{ secrets.IA_SECRET_KEY }}
      run: |
        echo "[s3]" > ~/.ia
        echo "access = $IA_ACCESS_KEY" >> ~/.ia
        echo "secret = $IA_SECRET_KEY" >> ~/.ia

    - name: Download and Upload files
      run: |
        IDENTIFIER="${{ github.event.inputs.page_url || '' }}"
        if [ -z "$IDENTIFIER" ]; then
          IDENTIFIER=$(echo "${{ github.event.inputs.page_title }}" | tr ' ' '-' | tr '[:upper:]' '[:lower:]')
        fi

        METADATA=(
          "--metadata=title:${{ github.event.inputs.page_title }}"
          "--metadata=description:${{ github.event.inputs.description }}"
          "--metadata=creator:${{ github.event.inputs.creator }}"
          "--metadata=date:${{ github.event.inputs.publish_date }}"
          "--metadata=subject:${{ github.event.inputs.subject_tags }}"
          "--metadata=collection:${{ github.event.inputs.collection }}"
          "--metadata=licenseurl:${{ github.event.inputs.license }}"
        )
        
        # Add test_item metadata only if 'Yes' is selected
        if [[ "${{ github.event.inputs.test_item }}" == "Yes (will be removed after 30 days)" ]]; then
          METADATA+=("--metadata=test_item:true")
        fi

        URLS=(${{ github.event.inputs.file_urls }})
        FILES_TO_UPLOAD=()
        for url in "${URLS[@]}"; do
          wget "$url"
          FILENAME=$(basename "$url")
          FILES_TO_UPLOAD+=("$FILENAME")
        done

        ia upload "$IDENTIFIER" "${FILES_TO_UPLOAD[@]}" "${METADATA[@]}"