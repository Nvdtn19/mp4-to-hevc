# .github/workflows/gdrive_to_archive.yml
name: Upload Google Drive Folder to Archive.org

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      identifier:
        description: 'Unique identifier for the Archive.org item (will be prefixed with "gdrive-archive-"). If blank, uses the current date.'
        required: false
        default: ''
      title:
        description: 'The title of the item on Archive.org.'
        required: true
        default: 'Automatic Archive of GDrive Folder'
      collection:
        description: 'The Archive.org collection to upload to (e.g., opensource_media, community).'
        required: true
        default: 'opensource_media'
      description:
        description: 'A description for the item page.'
        required: false
        default: 'This item is an automatic backup of the public Google Drive folder at https://drive.google.com/drive/folders/1wImUx1UkFVRDB-plqwoGo15blPgXD-Cn.'
      subjects:
        description: 'Subject tags (keywords), separated by commas.'
        required: false
        default: 'gdrive,backup,archive'
      creator:
        description: 'The creator of the content.'
        required: false
        default: 'GitHub Action'
      date:
        description: 'The creation/publication date of the work (YYYY-MM-DD).'
        required: false
        default: '' # Will default to current date in the script

  # Runs the workflow automatically every Sunday at midnight UTC using default values
  schedule:
    - cron: '0 0 * * 0'

jobs:
  upload-to-archive:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout your repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install gdown internetarchive

      # 4. Download files from Google Drive
      - name: Download files from Google Drive
        run: |
          mkdir gdrive_downloads
          gdown --folder https://drive.google.com/drive/folders/1wImUx1UkFVRDB-plqwoGo15blPgXD-Cn -O ./gdrive_downloads

      # 5. List downloaded files for debugging
      - name: List downloaded files
        run: ls -R ./gdrive_downloads

      # 6. Upload to Archive.org using user-provided or default metadata
      - name: Upload to Archive.org
        env:
          IA_ACCESS_KEY: ${{ secrets.IA_ACCESS_KEY }}
          IA_SECRET_KEY: ${{ secrets.IA_SECRET_KEY }}
        run: |
          # --- Set Metadata ---
          # Get the current date in YYYY-MM-DD format to use as a reliable default.
          CURRENT_DATE=$(date +%Y-%m-%d)

          # Use shell parameter expansion (${VAR:-DEFAULT}) to handle defaults.
          # This correctly separates GitHub's expression syntax from shell logic.
          IDENTIFIER_INPUT="${{ github.event.inputs.identifier }}"
          IDENTIFIER_SUFFIX="${IDENTIFIER_INPUT:-$CURRENT_DATE}"
          IDENTIFIER="gdrive-archive-1wImUx1UkFVRDB-plqwoGo15blPgXD-Cn-${IDENTIFIER_SUFFIX}"

          DATE_INPUT="${{ github.event.inputs.date }}"
          UPLOAD_DATE="${DATE_INPUT:-$CURRENT_DATE}"

          SUBJECTS_INPUT="${{ github.event.inputs.subjects }}"
          # The 'ia' tool expects subjects to be semicolon-separated. We convert from comma-separated.
          UPLOAD_SUBJECTS=$(echo "${SUBJECTS_INPUT:-gdrive,backup,archive}" | tr ',' ';')

          # --- Construct Upload Command ---
          echo "Uploading to Archive.org with identifier: $IDENTIFIER"
          
          ia upload "$IDENTIFIER" ./gdrive_downloads/* \
            --metadata="title:${{ github.event.inputs.title || 'Automatic Archive of GDrive Folder' }}" \
            --metadata="collection:${{ github.event.inputs.collection || 'opensource_media' }}" \
            --metadata="description:${{ github.event.inputs.description || 'Automatic backup of GDrive folder.' }}" \
            --metadata="subject:$UPLOAD_SUBJECTS" \
            --metadata="creator:${{ github.event.inputs.creator || 'GitHub Action' }}" \
            --metadata="date:$UPLOAD_DATE" \
