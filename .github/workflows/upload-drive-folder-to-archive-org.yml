name: Upload Google Drive Folder to Archive.org

# This action is triggered manually from the GitHub Actions tab.
on:
  workflow_dispatch:
    inputs:
      archive_identifier:
        description: 'Unique ID for the Archive.org item (no spaces)'
        required: true
        type: string
      archive_title:
        description: 'Page Title for the Archive.org item'
        required: true
        type: string
      archive_collection:
        description: 'The collection mediatype (e.g., community, data, software)'
        required: true
        type: string
        default: 'community'
      archive_description:
        description: 'A description of the item page'
        required: false
        type: string
      archive_subjects:
        description: 'Keywords, separated by commas (e.g., data, backup, files)'
        required: false
        type: string
      archive_creator:
        description: 'Creator of the content'
        required: false
        type: string
      archive_date:
        description: 'Date work was created/published (YYYY-MM-DD)'
        required: false
        type: string
      archive_language:
        description: 'Language of the work (3-letter code, e.g., eng)'
        required: false
        type: string

jobs:
  upload-to-archive:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out your repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up the Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Step 3: Install the necessary Python packages (gdown for Google Drive, internetarchive for uploading)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install gdown internetarchive

      # Step 4: Create a directory to hold the downloaded files
      - name: Create download directory
        run: mkdir gdrive_files

      # Step 5: Download all files from the public Google Drive folder
      - name: Download files from Google Drive
        run: |
          gdown --folder 'https://drive.google.com/drive/folders/1wImUx1UkFVRDB-plqwoGo15blPgXD-Cn' -O gdrive_files

      # Step 6: Prepare subject tags for the upload command
      # The 'ia' tool expects semicolons for multiple tags, so we replace the user's commas.
      - name: Prepare Subject Tags
        id: prep_tags
        run: |
          tags="${{ github.event.inputs.archive_subjects }}"
          echo "formatted_tags=${tags//,/;}" >> $GITHUB_ENV

      # Step 7: Upload the files to Archive.org with all the provided metadata
      # The access keys are provided as environment variables for security.
      - name: Upload files to Archive.org
        env:
          INTERNETARCHIVE_S3_KEY: ${{ secrets.IA_ACCESS_KEY }}
          INTERNETARCHIVE_S3_SECRET: ${{ secrets.IA_SECRET_KEY }}
        run: |
          ia upload ${{ github.event.inputs.archive_identifier }} gdrive_files/ \
          --metadata="title:${{ github.event.inputs.archive_title }}" \
          --metadata="collection:${{ github.event.inputs.archive_collection }}" \
          --metadata="description:${{ github.event.inputs.archive_description }}" \
          --metadata="subject:${{ env.formatted_tags }}" \
          --metadata="creator:${{ github.event.inputs.archive_creator }}" \
          --metadata="date:${{ github.event.inputs.archive_date }}" \
          --metadata="language:${{ github.event.inputs.archive_language }}"
