name: Download from MediaFire and Upload to Archive.org

on:
  workflow_dispatch:
    inputs:
      mediafire_folder_id:
        description: 'MediaFire Folder ID (from the folder URL)'
        required: true
      archive_title:
        description: 'Title for the Archive.org item'
        required: true
      archive_page_url_id:
        description: 'Page URL ID for the Archive.org item (auto-generated if empty)'
        required: false
      archive_description:
        description: 'Description for the Archive.org item'
        required: false
        default: 'Archived from MediaFire'
      archive_subject_tags:
        description: 'Comma-separated subject tags for the Archive.org item'
        required: false
      archive_collection_id:
        description: 'Archive.org collection ID'
        required: false
        default: 'opensource_media'
      is_test_item:
        description: 'Set to "true" for a test item upload'
        required: false
        default: 'false'

jobs:
  download-and-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mediafiredl internetarchive

      - name: Download files from MediaFire
        run: |
          mkdir -p downloaded_files
          mediafiredl "https://www.mediafire.com/folder/${{ github.event.inputs.mediafire_folder_id }}" --path "downloaded_files"

      - name: Configure Archive.org credentials
        env:
          IA_ACCESS_KEY: ${{ secrets.IA_ACCESS_KEY }}
          IA_SECRET_KEY: ${{ secrets.IA_SECRET_KEY }}
        run: |
          ia configure --access-key "$IA_ACCESS_KEY" --secret-key "$IA_SECRET_KEY"

      - name: Set Archive.org identifier
        id: set_identifier
        run: |
          if [ -z "${{ github.event.inputs.archive_page_url_id }}" ]; then
            echo "identifier=$(date +%s%N)" >> $GITHUB_OUTPUT
          else
            echo "identifier=${{ github.event.inputs.archive_page_url_id }}" >> $GITHUB_OUTPUT
          fi

      - name: Upload to Archive.org
        run: |
          ia upload ${{ steps.set_identifier.outputs.identifier }} downloaded_files/* \
            --metadata="title:${{ github.event.inputs.archive_title }}" \
            --metadata="description:${{ github.event.inputs.archive_description }}" \
            --metadata="subject:${{ github.event.inputs.archive_subject_tags }}" \
            --metadata="collection:${{ github.event.inputs.archive_collection_id }}" \
            ${{ github.event.inputs.is_test_item == 'true' && '--metadata="collection:test_collection"' || '' }}